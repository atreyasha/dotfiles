#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Tasks
*** Next
**** TODO Shell/Bin
***** update ~fold_stow~ to use ~main~ function
****** improve parsing and management of variables
****** copy new ~fold-stow~ to ~privates~
***** add more extensive formatting with usage to all bin scripts
****** not all should have ~set -e~ though, for example not ~pre-sleep-hook~
****** make scripts more idiomatic and easier to understand with upstream source links for motivation
****** so there would be no need to keep looking up documentation later on -> try to do this for all configurations in ~monix~ and ~dotfiles~
***** make ~bash_profile~ PATH declaration unique -> necessary for cases with tmux and new login shells: https://unix.stackexchange.com/questions/40749/remove-duplicate-path-entries-with-awk-command
****** add source to script as well
***** ~killall~ only works for one user: https://superuser.com/questions/137207/how-to-kill-a-process-started-with-a-different-user-without-being-root-or-sudoer
****** add this to script with source

**** TODO i3
***** centralize how ~xset~ is executed and reverted such that all configurations are in one place
****** this would require changes to ~i3lock-blur-lock~ and perhaps renaming it to ~i3lock-blur~
****** perhaps can have default floating around as environmental variable, or elsewhere
***** consider using lower i3blocks signals for logic
****** parse them with ~sed~ in ~bin~ scripts for refreshing
***** port ~i3-cycle~ backend to ~i3ipc~ and ship everything to AUR/pypi: https://github.com/mota/i3-cycle/issues/3
****** replace ~pypi~ package(s) with this implementation
***** ~xss-lock~ is not ideal since it gets triggered by DPMS and screensaver events which cannot be internally disabled: https://wiki.archlinux.org/title/Power_management#Sleep_hooks
       
*** Long-term
**** Monitor configuration
***** create ~AUR~ repository for alternative package management: https://github.com/phillipberndt/autorandr/issues/250
***** replace ~pypi~ package with this implementation

**** Neovim
***** Basic
****** migrate from vim to neovim to fix upstream issues related to ~terminfo~ and ~alacritty~: https://github.com/alacritty/alacritty/issues/919 
****** conditionally alias ~nvim~ to ~vim~ if it exists -> update preferences in applications to either ~nvim~ or ~vim~
****** conditional ~xterm-256color~ declaration inside ~.vimrc~ if ~nvim~ is not running
******* update variables referencing ~xterm-256color~ or ~vim~ in dotfiles if necessary
****** find good location to install ~suda~ plugin from ~nvim~ to overcome issue: https://github.com/neovim/neovim/issues/12103
***** Next
****** re-develop neovim configuration from the ground up by removing all unnecessary plugins 
****** sort out a clean way of updating all plugins as necessary: https://github.com/amix/vimrc/issues/637
******* this is no longer be necessary since plugins are regularly updated upstream

**** Emacs
***** Change emacs distribution
****** migrate to lightweight and lean personal emacs configuration which would be optimized with time such as with ~doom~ -> might help circumvent many bugs encountered such as those with ~latex~ and ~elpy~ compatibilities
****** work on script which updates all emacs packages during system update
***** Patch ~company-reftex~
****** think about improving workflow to handle spaces, make case unsensitive and parse bibliography codes better (eg. "doran2017does" from "do") in ~company-reftex-citation-candidates~, for development add package (eg. ~(company-reftex :location (recipe :fetcher github :repo "atreyasha/company-reftex"))~) in ~dotspacemacs-additional-packages~ and update packages, delete old package location 
***** Patch ~helm-company~
****** fix wrong argument error on ~helm-company~ post command hook -> linked to ~helm-company~ interaction with ~company-post-command~: see https://github.com/Sodel-the-Vociferous/helm-company/issues/21 -> fix would require looking at ~company-post-command~ to understand what is failing
***** Patch ~elpy~
****** issue of ~elpy~ hard-coded ~company~ backends -> this should instead be soft-coded and easily updated from upstream
***** Spacemacs
****** Improve autocompletions of latex layer: https://github.com/syl20bnr/spacemacs/issues/14134
******* wrong order of company-completions -> brute-force solution is to create new layer
******* lighter solution is to modify ~company-backends~ variable post-initialization -> perhaps with advice over latex init function
****** Automatically merge upstream changes to latex layer which are coped/modified

**** Neomutt 
***** reformat binding and unbinding schemes for each account to be more modular, consistent, portable and to re-use variables where possible
****** maybe can use for-loop with command-mode to create this quickly
****** consider removing junk for shortening configs
****** think of how to make this work better and less repetitive
***** raise issue on similar keys being acculumated in help pages -> specifically when ~i~ and ~d~ are suffixed on commands
***** consider adding check-stats or sync-mailbox command after moving or copying -> to update all statistics -> maybe raise issue/PR for ~mw~
***** improve other formatting with extended lines given ~named-mailbox~, and other optimizations with commands, see: https://github.com/jindraj/dotfiles/tree/master/.neomutt
****** consider integrating ~notmuch~ in the future
***** issue of repeated compose command after send: https://github.com/neomutt/neomutt/issues/2091
***** issue of specified subkey not being used: https://github.com/neomutt/neomutt/issues/2980
****** update exact subkey when this is fixed

**** Test cases
***** test for force-folded directories -> can re-use existing ~fold_stow~ script
***** test whether symlinks are already created or not as yet -> this is missing from current tests
***** can be used for both ~dotfiles~ and ~privates~ and can be done after basic ~stow~ test
**** Sync
***** implement ~sync~ in case repository tests fail
****** ~adopt~ files via stow and perform a git status check
****** force fold directory where file gets overwritten -> eg. gtk2/3, qt5ct etc.
**** Backup
***** clean up local drive
***** figure out how to preserve/return appropriate permission when syncing back and forth
****** might need to alter mount options for drive
***** try reformatting hard drive and encrypting
****** this would require a different workflow and back-up scripts would need to be changed
***** consider purchasing a yubikey to manage GPG keys
**** PGP keys
***** host public key on ~keys.openpgp.org~ or ~keybase.io~
***** add personal website page for accessing keys manually on GitHub or via specific keyserver (and mention not others)
***** consider adding PGP key-id to GitHub page
**** Mimeapps/mailcap
***** add mailcap helpers in ~conf~ and coordinate with mimetypes
***** synchronize mime system program defaults to same as ranger's rifle
**** Qutebrowser
***** disable dpms/dim when video is playing: see bug report https://github.com/qutebrowser/qutebrowser/issues/5504
**** GitHub
***** consider usefulness of RS-repositories
****** perhaps knowledge can be synthesized into a single repository with shape files and dates on which they apply 
****** this could also be in the form of a new data set for Himalayan forest cover reflectances
****** think of how to host RS thesis and if this even makes sense
***** consider purging SAM's 2 (1 deleted and 1 present) LFS files and replace with linked data
****** SAM's LFS data will be more problematic since an existing DOI and release is already created
****** need to test that no LFS data gets consumed with mock clones 
**** Generic management
***** best way to force-fold would be to stow all with ~--no-folding~ and then re-do with ~fold_stow~
***** update script which does manual update checks on files which might require upstream updates -> perhaps perform a diff framework to accept/reject upstream changes -> eg. ~spacemacs~ latex layer modified files
****** update configuration files with upstream changes (or remove upstream templates and keep barebones configurations)
****** examples include spacemacs ~init.el~, qutebrowser ~config.py~, ranger ~scope.sh~ and ~rifle.conf~ and picom ~picom.conf~
