#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Tasks
*** Next
**** TODO Fix package structure issue 
***** possible to keep --no-folding but re-install everything to ensure no noise
***** figure out workaround for cases where files get overwritten -> this would not reflect in git history so it would need to be fixed in another way

**** TODO Private
***** pass
***** abook -> figure out how to handle this as it gets overwritten
****** maybe can have different workflows for directories that require full ownership
***** gnupg keys
****** other important files such as sshcontrol -> think of this meticulously
***** ssh host configs
****** think about whether these should be in private or public repo
***** mbsyncrc, msmtp and individual account muttrcs
****** need to copy account and breaker pseudo-mailboxes
****** remove autogenerated comments later on when tracking
***** moves non-private user-specific dotfiles to privates repository
****** (sub)keys are present in three cases: git, neomutt, pass, signature and autorandr (too)
****** replace sourcing accounts.muttrc with an executable which searches for file, if not exits -> port ~accounts.muttrc~ to private repo      
****** move ~gitd~ dotfile folder to private repo as well
***** make UZH and UP emails fully archived and delete everything except archived directories (keep those as starting mailboxes)
***** populate private stow repository and later encrypt with git crypt
***** find out how to handle master PGP key since this is a core dependency
****** central backup and maybe paperkey as well

**** TODO Update management scripts
***** update script which updates all submodules and git repos to latest upstream commits eg. ~make update~ and then pushes upstream
***** update script for ~emacs~, ~vim~ and ~pip~ packages
***** perhaps re-run ~make install.monix~ to check for conflicts, or ~--adopt~ them if required
****** this could be necessary with no more folding -> for example with abook and GTK-related configs
****** or make another script which checks and adopts all changes in filesystem, eg. ~make check~ and ~make sync~
***** dump ~pip --user~ package lists as well during update -> ~pip freeze --user~
***** update script for package lists and all relevant logs on ~monix~ repo with ~git push~ afterwards
***** coordinate all of these processes with ~monix~ tasks

*** Long-term
**** Backup
***** reduce size of ~personal~ directory to keep only important data 
***** optimize an elegant backup workflow of the ~personal~ directory with a script, possibly in the private repository
***** think of possible failures with wrong drive -> perhaps would be good to have a reminder own notes instead of an automatic backup event
***** perhaps use tarballs with ~rsync~ to ensure only relevant data is updated
***** think of separating important and unimportant data -> only back up the important data
***** organize drive to ensure backups all make good sense

**** i3
***** port ~i3-cycle~ backend to ~i3ipc~ and ship everything to AUR/pypi: https://github.com/mota/i3-cycle/issues/3
***** replace ~pypi~ package(s) with this implementation
***** think about using xautolock/xss-lock to circumvent some manual pid checking and possibly extra sleep: https://github.com/i3/i3lock/issues/207

**** Monitor configuration
***** create ~AUR~ repository for alternative package management: https://github.com/phillipberndt/autorandr/issues/250
***** replace ~pypi~ package with this implementation

**** Neovim
***** Basic
****** migrate from vim to neovim to fix upstream issues related to ~terminfo~ and ~alacritty~: https://github.com/alacritty/alacritty/issues/919 
****** conditionally alias ~nvim~ to ~vim~ if it exists
****** conditional ~xterm-256color~ declaration inside ~.vimrc~ if ~nvim~ is not running
******* update variables referencing ~xterm-256color~ or ~vim~ in dotfiles if necessary
****** find good location to install ~suda~ plugin from ~nvim~ to overcome issue: https://github.com/neovim/neovim/issues/12103
***** Next
****** re-develop neovim configuration from the ground up by removing all unnecessary plugins 
****** sort out a clean way of updating all plugins as necessary: https://github.com/amix/vimrc/issues/637
******* this is no longer be necessary since plugins are regularly updated upstream

**** Emacs
***** Change emacs distribution
****** migrate to lightweight and lean personal emacs configuration which would be optimized with time such as with ~doom~ -> might help circumvent many bugs encountered such as those with ~latex~ and ~elpy~ compatibilities
****** work on script which updates all emacs packages during system update
***** Patch ~company-reftex~
****** think about improving workflow to handle spaces, make case unsensitive and parse bibliography codes better (eg. "doran2017does" from "do") in ~company-reftex-citation-candidates~, for development add package (eg. ~(company-reftex :location (recipe :fetcher github :repo "atreyasha/company-reftex"))~) in ~dotspacemacs-additional-packages~ and update packages, delete old package location 
***** Patch ~helm-company~
****** fix wrong argument error on ~helm-company~ post command hook -> linked to ~helm-company~ interaction with ~company-post-command~: see https://github.com/Sodel-the-Vociferous/helm-company/issues/21 -> fix would require looking at ~company-post-command~ to understand what is failing
***** Patch ~elpy~
****** issue of ~elpy~ hard-coded ~company~ backends -> this should instead be soft-coded and easily updated from upstream
***** Spacemacs
****** Improve autocompletions of latex layer: https://github.com/syl20bnr/spacemacs/issues/14134
******* wrong order of company-completions -> brute-force solution is to create new layer
******* lighter solution is to modify ~company-backends~ variable post-initialization -> perhaps with advice over latex init function
****** Automatically merge upstream changes to latex layer which are coped/modified

**** Neomutt 
***** issue of specified subkey not being used: https://github.com/neomutt/neomutt/issues/2980
***** update exact subkey when this is fixed
**** PGP public key
***** host public key on ~keys.openpgp.org~
***** add personal website page for accessing keys manually on GitHub or via specific keyserver (and mention not others)
**** Mimeapps
***** synchronize mime system program defaults to same as ranger's rifle
**** Qutebrowser
***** disable dpms/dim when video is playing: see bug report https://github.com/qutebrowser/qutebrowser/issues/5504
**** Generic
***** update configuration files with upstream changes (or remove upstream templates)
***** update script which does manual update checks on files which might require upstream updates -> perhaps perform a diff framework to accept/reject upstream changes -> eg. ~spacemacs~ latex layer modified files
***** examples include spacemacs and qutebrowser 
